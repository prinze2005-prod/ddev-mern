{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Saksham\\\\Documents\\\\GitHub\\\\ddev-mern\\\\Home-pro\\\\src\\\\context\\\\cart_context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useContext, useReducer } from 'react';\nimport reducer from '../reducers/cart_reducer';\nimport { ADD_TO_CART, REMOVE_CART_ITEM, TOGGLE_CART_ITEM_AMOUNT, CLEAR_CART, COUNT_CART_TOTALS } from '../actions';\n\nconst getLocalStorage = () => {\n  let cart = localStorage.getItem('cart');\n\n  if (cart) {\n    return JSON.parse(localStorage.getItem('cart'));\n  } else {\n    return [];\n  }\n};\n\nconst initialState = {\n  cart: getLocalStorage(),\n  total_items: 0,\n  total_amount: 0,\n  shipping_fee: 534\n};\nconst CartContext = /*#__PURE__*/React.createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); // add to cart\n\n  const addToCart = (id, color, amount, product) => {\n    dispatch({\n      type: ADD_TO_CART,\n      payload: {\n        id,\n        color,\n        amount,\n        product\n      }\n    });\n  }; // remove item\n\n\n  const removeItem = id => {\n    dispatch({\n      type: REMOVE_CART_ITEM,\n      payload: id\n    });\n  }; // toggle amount\n\n\n  const toggleAmount = (id, value) => {\n    console.log(id, value);\n    dispatch({\n      type: TOGGLE_CART_ITEM_AMOUNT,\n      payload: {\n        id,\n        value\n      }\n    });\n  }; // clear cart\n\n\n  const clearCart = () => {\n    dispatch({\n      type: CLEAR_CART\n    });\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: COUNT_CART_TOTALS\n    });\n    localStorage.setItem('cart', JSON.stringify(state.cart));\n  }, [state.cart]);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: { ...state,\n      addToCart,\n      removeItem,\n      toggleAmount,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}; // make sure use\n\n_s(CartProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = CartProvider;\nexport const useCartContext = () => {\n  _s2();\n\n  return useContext(CartContext);\n};\n\n_s2(useCartContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Saksham/Documents/GitHub/ddev-mern/Home-pro/src/context/cart_context.js"],"names":["React","useEffect","useContext","useReducer","reducer","ADD_TO_CART","REMOVE_CART_ITEM","TOGGLE_CART_ITEM_AMOUNT","CLEAR_CART","COUNT_CART_TOTALS","getLocalStorage","cart","localStorage","getItem","JSON","parse","initialState","total_items","total_amount","shipping_fee","CartContext","createContext","CartProvider","children","state","dispatch","addToCart","id","color","amount","product","type","payload","removeItem","toggleAmount","value","console","log","clearCart","setItem","stringify","useCartContext"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useReducer } from 'react'\r\nimport reducer from '../reducers/cart_reducer'\r\nimport {\r\n  ADD_TO_CART,\r\n  REMOVE_CART_ITEM,\r\n  TOGGLE_CART_ITEM_AMOUNT,\r\n  CLEAR_CART,\r\n  COUNT_CART_TOTALS,\r\n} from '../actions'\r\n\r\nconst getLocalStorage = () => {\r\n  let cart = localStorage.getItem('cart')\r\n  if (cart) {\r\n    return JSON.parse(localStorage.getItem('cart'))\r\n  } else {\r\n    return []\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  cart: getLocalStorage(),\r\n  total_items: 0,\r\n  total_amount: 0,\r\n  shipping_fee: 534,\r\n}\r\n\r\nconst CartContext = React.createContext()\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  // add to cart\r\n  const addToCart = (id, color, amount, product) => {\r\n    dispatch({ type: ADD_TO_CART, payload: { id, color, amount, product } })\r\n  }\r\n  // remove item\r\n  const removeItem = (id) => {\r\n    dispatch({ type: REMOVE_CART_ITEM, payload: id })\r\n  }\r\n  // toggle amount\r\n  const toggleAmount = (id, value) => {\r\n    console.log(id, value)\r\n    dispatch({ type: TOGGLE_CART_ITEM_AMOUNT, payload: { id, value } })\r\n  }\r\n  // clear cart\r\n  const clearCart = () => {\r\n    dispatch({ type: CLEAR_CART })\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: COUNT_CART_TOTALS })\r\n    localStorage.setItem('cart', JSON.stringify(state.cart))\r\n  }, [state.cart])\r\n\r\n  return (\r\n    <CartContext.Provider\r\n      value={{ ...state, addToCart, removeItem, toggleAmount, clearCart }}\r\n    >\r\n      {children}\r\n    </CartContext.Provider>\r\n  )\r\n}\r\n// make sure use\r\nexport const useCartContext = () => {\r\n  return useContext(CartContext)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}